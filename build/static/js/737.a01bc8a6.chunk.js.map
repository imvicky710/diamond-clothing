{"version":3,"file":"static/js/737.a01bc8a6.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.styles.tsx","components/form-input/form-input.styles.tsx","components/form-input/form-input.component.tsx","components/sign-up-form/sign-up-form.styles.tsx","components/sign-up-form/sign-up-form.component.tsx","components/sign-in-form/sign-in-form.styles.tsx","components/sign-in-form/sign-in-form.component.tsx","routes/authentication/authentication.styles.tsx","routes/authentication/authentication.component.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { BaseButton, GoogleSignInButton, InvertedButton, ButtonSpinner } from \"./button.styles\";\r\nimport { FC, ButtonHTMLAttributes } from 'react';\r\n\r\nexport enum BUTTON_TYPE_CLASSES {\r\n  base = 'base',\r\n  google = \"google-sign-in\",\r\n  inverted = \"inverted\",\r\n};\r\n\r\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): typeof BaseButton =>\r\n({\r\n  [BUTTON_TYPE_CLASSES.base]: BaseButton,\r\n  [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\r\n  [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\r\n}[buttonType]);\r\n\r\nexport type ButtonProps = {\r\n  buttonType?: BUTTON_TYPE_CLASSES;\r\n  isLoading?: boolean;\r\n} & ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button: FC<ButtonProps> = ({ children, buttonType, isLoading, ...otherProps }) => {\r\n  const CustomButton = getButton(buttonType);\r\n  return (\r\n    <CustomButton disabled={isLoading} {...otherProps}>\r\n      {isLoading ? <ButtonSpinner /> : children}\r\n    </CustomButton>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\nimport { SpinnerContainer } from \"../spinner/spinner.styles\";\r\n\r\nexport const BaseButton = styled.button`\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 50px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 15px;\r\n  background-color: black;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-family: \"Open Sans Condensed\";\r\n  font-weight: bolder;\r\n  border: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\n\r\nexport const BaseButtonHover = styled(BaseButton)`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const GoogleSignInButton = styled(BaseButton)`\r\n  background-color: #4285f4;\r\n  color: white;\r\n\r\n  &:hover {\r\n    background-color: #357ae8;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const InvertedButton = styled(BaseButton)`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const ButtonSpinner = styled(SpinnerContainer)`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst subColor = \"grey\";\r\nconst mainColor = \"black\";\r\n\r\nconst shrinkLabelStyles = css`\r\n  top: -14px;\r\n  font-size: 12px;\r\n  color: ${mainColor};\r\n`;\r\n\r\ntype FormInputLabelProps = {\r\n  shrink?: boolean;\r\n};\r\n\r\nexport const FormInputLabel = styled.label<FormInputLabelProps>`\r\n  color: ${subColor};\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  position: absolute;\r\n  pointer-events: none;\r\n  left: 5px;\r\n  top: 10px;\r\n  transition: 300ms ease all;\r\n\r\n  ${({ shrink }) => shrink && shrinkLabelStyles};\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background: none;\r\n  background-color: white;\r\n  color: ${subColor};\r\n  font-size: 18px;\r\n  padding: 10px 10px 10px 5px;\r\n  display: block;\r\n  width: 100%;\r\n  border: none;\r\n  border-radius: 0;\r\n  border-bottom: 1px solid ${subColor};\r\n  margin: 25px 0;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  &:focus ~ ${FormInputLabel} {\r\n    ${shrinkLabelStyles};\r\n  }\r\n\r\n  @media screen and (max-width: 800px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nexport const Group = styled.div`\r\n  position: relative;\r\n  margin: 45px 0;\r\n  input[type=\"password\"] {\r\n    letter-spacing: 0.3em;\r\n  }\r\n`;\r\n","import { Input, FormInputLabel, Group } from \"./form-input.styles\";\r\nimport { InputHTMLAttributes, FC } from \"react\";\r\n\r\ntype FormInputProps = { label: string } & InputHTMLAttributes<HTMLInputElement>;\r\n\r\nconst FormInput: FC<FormInputProps> = ({ label, ...otherProps }) => {\r\n  return (\r\n    <Group>\r\n      <Input {...otherProps} />\r\n      {label && (\r\n        <FormInputLabel\r\n          shrink={Boolean(\r\n            otherProps.value &&\r\n              typeof otherProps.value === \"string\" &&\r\n              otherProps.value.length\r\n          )}\r\n        >\r\n          {label}\r\n        </FormInputLabel>\r\n      )}\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignupContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n`;\r\nexport const H2 = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\n","import { useState, FormEvent, ChangeEvent } from \"react\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport Button from \"../button/button.component\";\r\nimport { SignupContainer, H2 } from \"./sign-up-form.styles\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signUpStart } from \"../../store/user/user.action\";\r\nimport { AuthError, AuthErrorCodes } from \"firebase/auth\";\r\n\r\nconst defaultFormFields = {\r\n  displayName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst SignUpForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { displayName, email, password, confirmPassword } = formFields;\r\n  const dispatch = useDispatch();\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      alert(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n    try {\r\n      dispatch(signUpStart(displayName, email, password));\r\n      resetFormFields();\r\n    } catch (error) {\r\n      if ((error as AuthError).code === AuthErrorCodes.EMAIL_EXISTS) {\r\n        alert('Cannot create user, email already in use');\r\n      } else {\r\n        console.log('User creation encountered an error', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignupContainer>\r\n      <H2>Don't have an account?</H2>\r\n      <span>Sign up with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"displayName\"\r\n          value={displayName}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"email\"\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"password\"\r\n          value={password}\r\n        />\r\n\r\n        <FormInput\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          required\r\n          onChange={handleChange}\r\n          name=\"confirmPassword\"\r\n          value={confirmPassword}\r\n        />\r\n\r\n        <Button type=\"submit\">Sign Up</Button>\r\n      </form>\r\n    </SignupContainer>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignInContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 380px;\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n  }\r\n`;\r\nexport const H2 = styled.h2`\r\n  margin: 10px 0;\r\n`;\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    row-gap: 10px;\r\n  }\r\n`;\r\n","import { useState, FormEvent, ChangeEvent } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\r\nimport { SignInContainer, ButtonsContainer } from './sign-in-form.styles';\r\nimport { googleSignInStart, emailSignInStart } from '../../store/user/user.action';\r\n//import { AuthError, AuthErrorCodes } from 'firebase/auth';\r\n\r\nconst defaultFormFields = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst SignInForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { email, password } = formFields;\r\n\r\n  const resetFormFields = () => {\r\n    setFormFields(defaultFormFields);\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    dispatch(googleSignInStart());\r\n  };\r\n\r\n  const handleSubmit = async (event: FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      dispatch(emailSignInStart(email, password));\r\n      resetFormFields();\r\n    } catch (error) {\r\n      alert('User sign in failed!');\r\n      // if ((error as AuthError).code === AuthErrorCodes.INVALID_PASSWORD) {\r\n      //   alert('Incorrect password for email');\r\n      // } else if((error as AuthError).code === AuthErrorCodes.USER_DELETED){\r\n      //   alert(\"No user associated with email\");\r\n      // } else {\r\n      //   alert('User sign in failed!');\r\n      // }\r\n      // switch ((error as AuthError).code) {\r\n      //   case \"auth/wrong-password\":\r\n      //     alert(\"Incorrect password for email\");\r\n      //     break;\r\n      //   case \"auth/user-not-found\":\r\n      //     alert(\"No user associated with email\");\r\n      //     break;\r\n      //   default:\r\n      //     console.log(error);\r\n      // }\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <SignInContainer>\r\n      <h2>Already have an account?</h2>\r\n      <span>Sign in with your email and password</span>\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          label='Email'\r\n          type='email'\r\n          required\r\n          onChange={handleChange}\r\n          name='email'\r\n          value={email}\r\n        />\r\n\r\n        <FormInput\r\n          label='Password'\r\n          type='password'\r\n          required\r\n          onChange={handleChange}\r\n          name='password'\r\n          value={password}\r\n        />\r\n        <ButtonsContainer>\r\n          <Button type='submit'>Sign In</Button>\r\n          <Button\r\n            buttonType={BUTTON_TYPE_CLASSES.google}\r\n            type='button'\r\n            onClick={signInWithGoogle}\r\n          >\r\n            Sign In With Google\r\n          </Button>\r\n        </ButtonsContainer>\r\n      </form>\r\n    </SignInContainer>\r\n  );\r\n};\r\n\r\nexport default SignInForm;","import styled from \"styled-components\";\r\n\r\nexport const AuthenticationContainer = styled.div`\r\n  display: flex;\r\n  width: 900px;\r\n  justify-content: space-between;\r\n  margin: 30px auto;\r\n  @media screen and (max-width: 800px) {\r\n    display: grid;\r\n    width: 100%;\r\n  }\r\n`;\r\n","import SignUpForm from \"../../components/sign-up-form/sign-up-form.component\";\r\nimport SignInForm from \"../../components/sign-in-form/sign-in-form.component\";\r\nimport { AuthenticationContainer } from \"./authentication.styles\";\r\n\r\nconst Autentication = () => {\r\n  return (\r\n    <AuthenticationContainer>\r\n      <SignInForm />\r\n      <SignUpForm />\r\n    </AuthenticationContainer>\r\n  );\r\n};\r\n\r\nexport default Autentication;\r\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}"],"names":["BUTTON_TYPE_CLASSES","children","buttonType","isLoading","otherProps","CustomButton","base","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","disabled","styled","ButtonSpinner","SpinnerContainer","subColor","shrinkLabelStyles","css","FormInputLabel","shrink","Input","Group","label","Boolean","value","length","SignupContainer","H2","defaultFormFields","displayName","email","password","confirmPassword","useState","formFields","setFormFields","dispatch","useDispatch","handleSubmit","event","preventDefault","alert","signUpStart","error","code","AuthErrorCodes","console","log","handleChange","target","name","onSubmit","type","required","onChange","SignInContainer","ButtonsContainer","signInWithGoogle","googleSignInStart","emailSignInStart","onClick","AuthenticationContainer","_objectWithoutProperties","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}